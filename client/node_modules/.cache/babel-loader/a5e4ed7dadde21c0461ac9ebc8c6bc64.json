{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Desktop/artwalkkonzept-auth-aws/artwalkkonzept-auth-aws-google_13.10.21/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{useToken}from'./useToken';export var useUser=function useUser(){var _useToken=useToken(),_useToken2=_slicedToArray(_useToken,1),token=_useToken2[0];var getPayloadFromToken=function getPayloadFromToken(token){var encodedPayload=token.split('.')[1];return JSON.parse(atob(encodedPayload));};var _useState=useState(function(){if(!token)return null;return getPayloadFromToken(token);}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];useEffect(function(){if(!token){setUser(null);}else{setUser(getPayloadFromToken(token));}},[token]);return user;};","map":{"version":3,"sources":["/Users/admin/Desktop/artwalkkonzept-auth-aws/artwalkkonzept-auth-aws-google_13.10.21/client/src/auth/useUser.js"],"names":["useState","useEffect","useToken","useUser","token","getPayloadFromToken","encodedPayload","split","JSON","parse","atob","user","setUser"],"mappings":"8KAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,QAAT,KAAyB,YAAzB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,eACTD,QAAQ,EADC,wCAClBE,KADkB,eAGzB,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAD,KAAK,CAAI,CACjC,GAAME,CAAAA,cAAc,CAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAvB,CACA,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACJ,cAAD,CAAf,CAAP,CACH,CAHD,CAHyB,cAQDN,QAAQ,CAAC,UAAM,CACnC,GAAI,CAACI,KAAL,CAAY,MAAO,KAAP,CACZ,MAAOC,CAAAA,mBAAmB,CAACD,KAAD,CAA1B,CACH,CAH+B,CARP,wCAQlBO,IARkB,eAQZC,OARY,eAazBX,SAAS,CAAC,UAAM,CACZ,GAAI,CAACG,KAAL,CAAY,CACRQ,OAAO,CAAC,IAAD,CAAP,CACH,CAFD,IAEO,CACHA,OAAO,CAACP,mBAAmB,CAACD,KAAD,CAApB,CAAP,CACH,CACJ,CANQ,CAMN,CAACA,KAAD,CANM,CAAT,CAQA,MAAOO,CAAAA,IAAP,CACH,CAtBM","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useToken } from './useToken';\n\nexport const useUser = () => {\n    const [token] = useToken();\n\n    const getPayloadFromToken = token => {\n        const encodedPayload = token.split('.')[1];\n        return JSON.parse(atob(encodedPayload));\n    }\n\n    const [user, setUser] = useState(() => {\n        if (!token) return null;\n        return getPayloadFromToken(token);\n    });\n\n    useEffect(() => {\n        if (!token) {\n            setUser(null);\n        } else {\n            setUser(getPayloadFromToken(token));\n        }\n    }, [token]);\n\n    return user;\n}"]},"metadata":{},"sourceType":"module"}