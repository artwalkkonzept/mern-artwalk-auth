{"ast":null,"code":"import _defineProperty from\"/Users/admin/Desktop/artwalkkonzept-auth-aws/artwalkkonzept-auth-aws-google_13.10.21/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/admin/Desktop/artwalkkonzept-auth-aws/artwalkkonzept-auth-aws-google_13.10.21/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/admin/Desktop/artwalkkonzept-auth-aws/artwalkkonzept-auth-aws-google_13.10.21/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";/*\n    This is just a nice custom hook that we can\n    use to get all the query parameters from inside\n    our components. Don't worry about the details\n    unless you're curious :)\n*/import{useLocation}from'react-router-dom';var pairs=function pairs(arr){return arr.reduce(function(acc,x,i){if(i%2===0){return[].concat(_toConsumableArray(acc),[[x]]);}else{var last=acc[acc.length-1];var everythingElse=acc.slice(0,acc.length-1);return[].concat(_toConsumableArray(everythingElse),[[].concat(_toConsumableArray(last),[x])]);}},[])[0]||[];};var fold=function fold(arr){return pairs(arr).reduce(function(acc,pair){return _objectSpread(_objectSpread({},acc),{},_defineProperty({},pair[0],pair[1]));},{});};export var useQueryParams=function useQueryParams(){var location=useLocation();var currentParamsObj=new URLSearchParams(location.search);var params=fold(_toConsumableArray(currentParamsObj.entries()));return params;};","map":{"version":3,"sources":["/Users/admin/Desktop/artwalkkonzept-auth-aws/artwalkkonzept-auth-aws-google_13.10.21/client/src/util/useQueryParams.js"],"names":["useLocation","pairs","arr","reduce","acc","x","i","last","length","everythingElse","slice","fold","pair","useQueryParams","location","currentParamsObj","URLSearchParams","search","params","entries"],"mappings":"mhBAAA;AACA;AACA;AACA;AACA;AACA,EAEA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,MAAJ,CAAW,SAACC,GAAD,CAAMC,CAAN,CAASC,CAAT,CAAe,CAC3C,GAAIA,CAAC,CAAG,CAAJ,GAAU,CAAd,CAAiB,CACb,mCAAWF,GAAX,GAAgB,CAACC,CAAD,CAAhB,GACH,CAFD,IAEO,CACH,GAAME,CAAAA,IAAI,CAAGH,GAAG,CAACA,GAAG,CAACI,MAAJ,CAAa,CAAd,CAAhB,CACA,GAAMC,CAAAA,cAAc,CAAGL,GAAG,CAACM,KAAJ,CAAU,CAAV,CAAaN,GAAG,CAACI,MAAJ,CAAa,CAA1B,CAAvB,CACA,mCAAWC,cAAX,gCAA+BF,IAA/B,GAAqCF,CAArC,KACH,CACJ,CARoB,CAQlB,EARkB,EAQd,CARc,GAQR,EARI,EAAjB,CAUA,GAAMM,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAT,GAAG,QAAID,CAAAA,KAAK,CAACC,GAAD,CAAL,CAAWC,MAAX,CAAkB,SAACC,GAAD,CAAMQ,IAAN,CAAe,CACjD,sCACOR,GADP,wBAEKQ,IAAI,CAAC,CAAD,CAFT,CAEeA,IAAI,CAAC,CAAD,CAFnB,GAIH,CALmB,CAKjB,EALiB,CAAJ,EAAhB,CAOA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAChC,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CACA,GAAMe,CAAAA,gBAAgB,CAAG,GAAIC,CAAAA,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAzB,CACA,GAAMC,CAAAA,MAAM,CAAGP,IAAI,oBAAKI,gBAAgB,CAACI,OAAjB,EAAL,EAAnB,CAEA,MAAOD,CAAAA,MAAP,CACH,CANM","sourcesContent":["/*\n    This is just a nice custom hook that we can\n    use to get all the query parameters from inside\n    our components. Don't worry about the details\n    unless you're curious :)\n*/\n\nimport { useLocation } from 'react-router-dom';\n\nconst pairs = arr => arr.reduce((acc, x, i) => {\n    if (i % 2 === 0) {\n        return [...acc, [x]];\n    } else {\n        const last = acc[acc.length - 1];\n        const everythingElse = acc.slice(0, acc.length - 1);\n        return [...everythingElse, [...last, x]];\n    }\n}, [])[0] || [];\n\nconst fold = arr => pairs(arr).reduce((acc, pair) => {\n    return {\n        ...acc,\n        [pair[0]]: pair[1],\n    }\n}, {});\n\nexport const useQueryParams = () => {\n    const location = useLocation();\n    const currentParamsObj = new URLSearchParams(location.search);\n    const params = fold([...currentParamsObj.entries()]);\n\n    return params;\n}"]},"metadata":{},"sourceType":"module"}