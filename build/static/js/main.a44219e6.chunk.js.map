{"version":3,"sources":["AuthService.js","Login.js","App.js","index.js"],"names":["AuthService","auth_api_url","this","username","password","a","fetch","method","body","JSON","stringify","res","json","includes","parseInt","status","Error","msg","setToken","token","getToken","localStorage","setItem","getItem","removeItem","url","options","headers","loggedIn","Login","props","useState","setUsername","setPassword","onChange","event","target","value","name","type","placeholder","onClick","login","API_URL","authService","App","artwalks","setKittens","requestCount","setRequestCount","resp","console","log","useEffect","response","data","getData","contents","length","map","artwalk","bilds","id","ReactDOM","render","document","getElementById"],"mappings":"wNAIMA,E,WACJ,WAAYC,GAAe,oBACzBC,KAAKD,aAAeA,E,gFAGtB,WAAYE,EAAUC,GAAtB,iBAAAC,EAAA,sEACoBH,KAAKI,MAAMJ,KAAKD,aAAc,CAC9CM,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBP,WACAC,eALN,cACQO,EADR,gBAQmBA,EAAIC,OARvB,UAQMA,EARN,QASM,CAAC,IAAK,KAAKC,SAASC,SAASH,EAAII,SATvC,sBAUUC,MAAMJ,EAAKK,KAVrB,cAYEf,KAAKgB,SAASN,EAAKO,OAZrB,kBAaSP,GAbT,iD,+EAgBA,WAQE,OAA4B,OAApBV,KAAKkB,a,sBAGf,SAASD,GACPE,aAAaC,QAAQ,QAASH,K,sBAGhC,WACE,OAAOE,aAAaE,QAAQ,W,oBAG9B,WACEF,aAAaG,WAAW,W,oIAG1B,SAAMC,EAAKC,GACT,IAAMC,EAAU,CACd,OAAU,mBACV,eAAgB,oBAOlB,OAJIzB,KAAK0B,aACPD,EAAO,cAAP,iBAAqCzB,KAAKkB,aAGrCd,MAAMmB,EAAD,aACVE,WACGD,U,KAKM1B,I,OC1CA6B,MArBf,SAAeC,GAEb,MAAgCC,mBAAS,IAAzC,mBAAO5B,EAAP,KAAiB6B,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAO3B,EAAP,KAAiB6B,EAAjB,KAMA,OACE,qCACE,uCACA,uBAAOC,SAAU,SAACC,GAAD,OAAWH,EAAYG,EAAMC,OAAOC,QACnDC,KAAK,WAAWC,KAAK,OAAOC,YAAY,aAAmB,uBAC7D,uBAAON,SAAU,SAACC,GAAD,OAAWF,EAAYE,EAAMC,OAAOC,QACnDC,KAAK,WAAWC,KAAK,WAAWC,YAAY,aAAmB,uBACjE,wBAAQC,QAXZ,WACEX,EAAMY,MAAMvC,EAAUC,IAUpB,uBCdAuC,EAAU,4BAEVC,EAAc,IAAI5C,EAAJ,UAAmB2C,EAAnB,wBA4CLE,MA1Cf,WACE,MAA+Bd,mBAAS,IAAxC,mBAAOe,EAAP,KAAiBC,EAAjB,KACA,EAAwChB,mBAAS,GAAjD,mBAAOiB,EAAP,KAAqBC,EAArB,KAFa,4CAcb,WAAqB9C,EAAUC,GAA/B,eAAAC,EAAA,+EAEuBuC,EAAYF,MAAMvC,EAAUC,GAFnD,OAEU8C,EAFV,OAGIC,QAAQC,IAAI,kBAAmBF,EAAKjC,KACpCgC,EAAgBD,EAAe,GAJnC,gDAMIG,QAAQC,IAAI,QAAZ,MANJ,0DAda,sBAIbC,qBAAU,WAAM,4CACd,gCAAAhD,EAAA,6DACQoB,EADR,UACiBkB,EADjB,sBAEyBC,EAAYtC,MAAMmB,GAF3C,cAEQ6B,EAFR,gBAGqBA,EAAS1C,OAH9B,OAGQ2C,EAHR,OAIER,EAAWQ,GAJb,4CADc,uBAAC,WAAD,wBAOdC,KACC,CAACR,IAYJ,IAAIS,EAAW,6CAQf,OAPIX,EAASY,OAAS,IACpBD,EACE,6BACGX,EAASa,KAAI,SAAAC,GAAO,OAAI,+BAAsBA,EAAQtB,KAA9B,KAAsCsB,EAAQC,QAArCD,EAAQE,UAK9C,qCACE,0CACCL,EACD,cAAC,EAAD,CAAOf,MApCE,gDAqCRE,EAAYhB,WAAa,oDAA+B,4DCzC/DmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a44219e6.chunk.js","sourcesContent":["/**\n * Service class for authenticating users against an API\n * and storing JSON Web Tokens in the browser's LocalStorage.\n */\nclass AuthService {\n  constructor(auth_api_url) {\n    this.auth_api_url = auth_api_url;\n  }\n\n  async login(username, password) {\n    const res = await this.fetch(this.auth_api_url, {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    let json = await res.json();\n    if ([401, 404].includes(parseInt(res.status))) {\n      throw Error(json.msg);\n    }\n    this.setToken(json.token);\n    return json;\n  }\n\n  loggedIn() {\n    // TODO: Check if token is expired using 'jwt-decode'\n    // TODO: Install using 'npm install jwt-decode'\n    /*\n    if (jwtDecode(token).exp < Date.now() / 1000) {\n        // Do something to renew token\n    }\n     */\n    return (this.getToken() !== null);\n  }\n\n  setToken(token) {\n    localStorage.setItem(\"token\", token);\n  }\n\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n  }\n\n  fetch(url, options) {\n    const headers = {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (this.loggedIn()) {\n      headers[\"Authorization\"] = `Bearer ${this.getToken()}`\n    }\n\n    return fetch(url, {\n      headers,\n      ...options\n    });\n  }\n}\n\nexport default AuthService;\n","import { useState } from 'react';\n\nfunction Login(props) {\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleLogin() {\n    props.login(username, password);\n  }\n  \n  return (\n    <>\n      <h3>Login</h3>\n      <input onChange={(event) => setUsername(event.target.value)}\n        name=\"username\" type=\"text\" placeholder=\"username\"></input><br />\n      <input onChange={(event) => setPassword(event.target.value)}\n        name=\"password\" type=\"password\" placeholder=\"password\"></input><br />\n      <button onClick={handleLogin}>Login</button>\n    </>\n  );\n}\n\nexport default Login;\n","import { useState, useEffect } from \"react\";\nimport AuthService from \"./AuthService\";\nimport Login from \"./Login\";\n\nconst API_URL = \"http://localhost:8080/api\";\n\nconst authService = new AuthService(`${API_URL}/users/authenticate`);\n\nfunction App() {\n  const [artwalks, setKittens] = useState([]);\n  const [requestCount, setRequestCount] = useState(0);\n\n  useEffect(() => {\n    async function getData() {\n      const url = `${API_URL}/artwalks`;\n      const response = await authService.fetch(url);\n      const data = await response.json();\n      setKittens(data);\n    }\n    getData();\n  }, [requestCount]);\n\n  async function login(username, password) {\n    try {\n      const resp = await authService.login(username, password);\n      console.log(\"Authentication:\", resp.msg);\n      setRequestCount(requestCount + 1);\n    } catch (e) {\n      console.log(\"Login\", e);\n    }\n  }\n\n  let contents = <p>No artwalks!</p>;\n  if (artwalks.length > 0) {\n    contents =\n      <ol>\n        {artwalks.map(artwalk => <li key={artwalk.id}>{artwalk.name}, {artwalk.bilds}</li>)}\n      </ol>;\n  }\n\n  return (\n    <>\n      <h1>Artwalks</h1>\n      {contents}\n      <Login login={login} />\n      {authService.loggedIn() ? <pre>User is logged in</pre> : <pre>User is not logged in</pre>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}