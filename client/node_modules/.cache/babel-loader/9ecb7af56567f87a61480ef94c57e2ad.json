{"ast":null,"code":"import _regeneratorRuntime from\"/Users/admin/Desktop/artwalkkonzept-auth-aws/artwalkkonzept-auth-aws-google_13.10.21/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/admin/Desktop/artwalkkonzept-auth-aws/artwalkkonzept-auth-aws-google_13.10.21/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/admin/Desktop/artwalkkonzept-auth-aws/artwalkkonzept-auth-aws-google_13.10.21/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{useHistory}from'react-router-dom';import axios from'axios';import{useToken}from'../auth/useToken';import{useUser}from'../auth/useUser';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export var UserInfoPage=function UserInfoPage(){var user=useUser();var _useToken=useToken(),_useToken2=_slicedToArray(_useToken,2),token=_useToken2[0],setToken=_useToken2[1];var id=user.id,email=user.email,isVerified=user.isVerified,info=user.info;// We'll use the history to navigate the user\n// programmatically later on (we're not using it yet)\nvar history=useHistory();// These states are bound to the values of the text inputs\n// on the page (see JSX below). \nvar _useState=useState(info.name||''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(info.bilds||''),_useState4=_slicedToArray(_useState3,2),bilds=_useState4[0],setBilds=_useState4[1];// These state variables control whether or not we show\n// the success and error message sections after making\n// a network request (see JSX below).\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showSuccessMessage=_useState6[0],setShowSuccessMessage=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showErrorMessage=_useState8[0],setShowErrorMessage=_useState8[1];// This useEffect hook automatically hides the\n// success and error messages after 3 seconds when they're shown.\n// Just a little user interface improvement.\nuseEffect(function(){if(showSuccessMessage||showErrorMessage){setTimeout(function(){setShowSuccessMessage(false);setShowErrorMessage(false);},3000);}},[showSuccessMessage,showErrorMessage]);var saveChanges=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,newToken;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.put(\"/api/users/\".concat(id),{name:name,bilds:bilds},{headers:{Authorization:\"Bearer \".concat(token)}});case 3:response=_context.sent;newToken=response.data.token;setToken(newToken);setShowSuccessMessage(true);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);setShowErrorMessage(true);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function saveChanges(){return _ref.apply(this,arguments);};}();var logOut=function logOut(){localStorage.removeItem('token');history.push('/login');};var resetValues=function resetValues(){setName(info.name);setBilds(info.bilds);};// And here we have the JSX for our component. It's pretty straightforward\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"content-container\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\" \",email]}),!isVerified&&/*#__PURE__*/_jsx(\"div\",{className:\"fail\",children:\"You won't be able to make any changes until you verify your email\"}),showSuccessMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"success\",children:\"Successfully saved user data!\"}),showErrorMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"fail\",children:\"Uh oh... something went wrong and we couldn't save changes\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Create an ArtWalk\"}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"ArtWalk title:\"}),/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return setName(e.target.value);},value:name})]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Bild:\"}),/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){return setBilds(e.target.value);},value:bilds})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttom\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:resetValues,children:\"Reset Values\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:saveChanges,children:\"Save Changes\"})}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:logOut,children:\"Log Out\"})})]})]});};","map":{"version":3,"sources":["/Users/admin/Desktop/artwalkkonzept-auth-aws/artwalkkonzept-auth-aws-google_13.10.21/client/src/pages/UserInfoPage.js"],"names":["useState","useEffect","useHistory","axios","useToken","useUser","UserInfoPage","user","token","setToken","id","email","isVerified","info","history","name","setName","bilds","setBilds","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","setTimeout","saveChanges","put","headers","Authorization","response","newToken","data","logOut","localStorage","removeItem","push","resetValues","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\nimport { useUser } from '../auth/useUser';\n\nexport const UserInfoPage = () => {\n    const user = useUser();\n    const [token, setToken] = useToken();\n\n    const { id, email, isVerified, info } = user;\n\n    // We'll use the history to navigate the user\n    // programmatically later on (we're not using it yet)\n    const history = useHistory();\n\n    // These states are bound to the values of the text inputs\n    // on the page (see JSX below). \n    const [name, setName] = useState(info.name || '');\n    const [bilds, setBilds] = useState(info.bilds || '');\n\n    // These state variables control whether or not we show\n    // the success and error message sections after making\n    // a network request (see JSX below).\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    // This useEffect hook automatically hides the\n    // success and error messages after 3 seconds when they're shown.\n    // Just a little user interface improvement.\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n    const saveChanges = async () => {\n        try {\n            const response = await axios.put(`/api/users/${id}`, {\n                name,\n                bilds,\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            const { token: newToken } = response.data;\n            setToken(newToken);\n            setShowSuccessMessage(true);\n        } catch (error) {\n            setShowErrorMessage(true);\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem('token');\n        history.push('/login');\n    }\n    \n    const resetValues = () => {\n        setName(info.name);\n        setBilds(info.bilds);\n    }\n    \n    // And here we have the JSX for our component. It's pretty straightforward\n    return (\n        <div className=\"content-container\">\n            <h1> {email}</h1>\n            {!isVerified && <div className=\"fail\">You won't be able to make any changes until you verify your email</div>}\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\n            <h3>Create an ArtWalk</h3>\n            <label>\n                <p>ArtWalk title:</p>\n                <input\n                    onChange={e => setName(e.target.value)}\n                    value={name} />\n            </label>\n            <label>\n                <p>Bild:</p>\n                <input\n                    onChange={e => setBilds(e.target.value)}\n                    value={bilds} />\n            </label>\n                <div className=\"buttom\">\n            <li><button onClick={resetValues}>Reset Values</button></li>\n            <li><button onClick={saveChanges}>Save Changes</button></li>\n            <hr />\n            <li><button onClick={logOut}>Log Out</button></li>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}