{"version":3,"sources":["auth/useToken.js","pages/LogInPage.js","pages/SignUpPage.js","auth/useUser.js","pages/UserArtwalksPage.js","auth/PrivateRoute.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["useToken","useState","localStorage","getItem","token","setTokenInternal","newToken","setItem","LogInPage","setToken","errorMessage","emailValue","setEmailValue","passwordValue","setPasswordValue","history","useHistory","onLogInClicked","a","axios","post","email","password","response","data","push","className","value","onChange","e","target","placeholder","type","disabled","onClick","SignUpPage","confirmPasswordValue","setConfirmPasswordValue","onSignUpClicked","useUser","getPayloadFromToken","encodedPayload","split","JSON","parse","atob","user","setUser","useEffect","UserArtwalksPage","id","artwalks","name","setName","bilds","setBilds","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","setTimeout","saveChanges","put","headers","Authorization","removeItem","PrivateRoute","props","to","Routes","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.463aa1a4.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const useToken = () => {\n    const [token, setTokenInternal] = useState(() => {\n        return localStorage.getItem('token');\n    });\n\n    const setToken = newToken => {\n        localStorage.setItem('token', newToken);\n        setTokenInternal(newToken);\n    }\n\n    return [token, setToken];\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\n\nexport const LogInPage = () => {\n    const [token, setToken] = useToken();\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const [emailValue, setEmailValue] = useState('');\n    const [passwordValue, setPasswordValue] = useState('');\n\n    const history = useHistory();\n\n    const onLogInClicked = async () => {\n        const response = await axios.post('/api/login', {\n            email: emailValue,\n            password: passwordValue,\n        });\n        const { token } = response.data;\n        setToken(token);\n        history.push('/');\n    }\n\n    return (\n        <div className=\"content-container\">\n            <h1>Log In</h1>\n            {errorMessage && <div className=\"fail\">{errorMessage}</div>}\n            <input\n                value={emailValue}\n                onChange={e => setEmailValue(e.target.value)}\n                placeholder=\"someone@gmail.com\" />\n            <input\n                type=\"password\"\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                placeholder=\"password\" />\n            <hr />\n            <button\n                disabled={!emailValue || !passwordValue}\n                onClick={onLogInClicked}>Log In</button>\n            <button onClick={() => history.push('/forgot-password')}>Forgot your password?</button>\n            <button onClick={() => history.push('/signup')}>Don't have an account? Sign Up</button>\n        </div>\n    );\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\n\nexport const SignUpPage = () => {\n    const [token, setToken] = useToken();\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const [emailValue, setEmailValue] = useState('');\n    const [passwordValue, setPasswordValue] = useState('');\n    const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n\n    const history = useHistory();\n\n    const onSignUpClicked = async () => {\n        const response = await axios.post('/api/signup', {\n            email: emailValue,\n            password: passwordValue,\n        });\n        const { token } = response.data;\n        setToken(token);\n        history.push('/');\n    }\n\n    return (\n        <div className=\"content-container\">\n            <h1>Sign Up</h1>\n            {errorMessage && <div className=\"fail\">{errorMessage}</div>}\n            <input\n                value={emailValue}\n                onChange={e => setEmailValue(e.target.value)}\n                placeholder=\"someone@gmail.com\" />\n            <input\n                type=\"password\"\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                placeholder=\"password\" />\n            <input\n                type=\"password\"\n                value={confirmPasswordValue}\n                onChange={e => setConfirmPasswordValue(e.target.value)}\n                placeholder=\"password\" />\n            <hr />\n            <button\n                disabled={\n                    !emailValue || !passwordValue ||\n                    passwordValue !== confirmPasswordValue\n                }\n                onClick={onSignUpClicked}>Sign Up</button>\n            <button onClick={() => history.push('/login')}>Already have an account? Log In</button>\n        </div>\n    );\n}","import { useState, useEffect } from 'react';\nimport { useToken } from './useToken';\n\nexport const useUser = () => {\n    const [token] = useToken();\n\n    const getPayloadFromToken = token => {\n        const encodedPayload = token.split('.')[1];\n        return JSON.parse(atob(encodedPayload));\n    }\n\n    const [user, setUser] = useState(() => {\n        if (!token) return null;\n        return getPayloadFromToken(token);\n    });\n\n    useEffect(() => {\n        if (!token) {\n            setUser(null);\n        } else {\n            setUser(getPayloadFromToken(token));\n        }\n    }, [token]);\n\n    return user;\n}","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\nimport { useUser } from '../auth/useUser';\n\nexport const UserArtwalksPage = () => {\n    const user = useUser();\n    const [token, setToken] = useToken();\n\n    const { id, email, artwalks } = user;\n\n    // We'll use the history to navigate the user\n    // programmatically later on (we're not using it yet)\n    const history = useHistory();\n\n    // These states are bound to the values of the text inputs\n    // on the page (see JSX below). \n    const [name, setName] = useState(artwalks.name || '');\n    const [bilds, setBilds] = useState(artwalks.bilds || '');\n\n    // These state variables control whether or not we show\n    // the success and error message sections after making\n    // a network request (see JSX below).\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    // This useEffect hook automatically hides the\n    // success and error messages after 3 seconds when they're shown.\n    // Just a little user interface improvement.\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n    const saveChanges = async () => {\n        try {\n            const response = await axios.put(`/api/users/${id}`, {\n                name,\n                bilds,\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            const { token: newToken } = response.data;\n            setToken(newToken);\n            setShowSuccessMessage(true);\n        } catch (error) {\n            setShowErrorMessage(true);\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem(\"token\");\n        history.push(\"./login\");\n    }\n    \n    const resetValues = () => {\n        setName(artwalks.name);\n        setBilds(artwalks.bilds);\n    }\n    \n    // And here we have the JSX for our component. It's pretty straightforward\n    return (\n        <div className=\"content-container\">\n            <h1>Artwalk for {email}</h1>\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\n            <label>\n                Title:\n                <input\n                    onChange={e => setName(e.target.value)}\n                    value={name} />\n            </label>\n            <label>\n                Bild:\n                <input\n                    onChange={e => setBilds(e.target.value)}\n                    value={bilds} />\n            </label>\n            <hr />\n            <button onClick={saveChanges}>Save Changes</button>\n            <button onClick={resetValues}>Reset Values</button>\n            <button onClick={logOut}>Log Out</button>\n        </div>\n    );\n}","import { Redirect, Route } from 'react-router-dom';\nimport { useUser } from './useUser';\n\nexport const PrivateRoute = props => {\n    const user = useUser();\n\n    if (!user) return <Redirect to=\"/login\" />\n\n    return <Route {...props} />\n}","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { LogInPage } from './pages/LogInPage';\nimport { SignUpPage } from './pages/SignUpPage';\nimport { UserArtwalksPage } from './pages/UserArtwalksPage';\nimport { PrivateRoute } from './auth/PrivateRoute';\n\nexport const Routes = () => {\n    return (\n        <Router>\n            <Switch>\n                <PrivateRoute path=\"/\" exact>\n                    <UserArtwalksPage />\n                </PrivateRoute>\n                <Route path=\"/login\">\n                    <LogInPage />\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUpPage />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}","import { Routes } from './Routes';\n\nexport const App = () => {\n    return (\n        <div className=\"page-container\">\n            <Routes />\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}