{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/mern-artwalk-auth-aws-google/client/src/pages/PasswordResetLandingPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { PasswordResetSuccess } from './PasswordResetSuccess';\nimport { PasswordResetFail } from './PasswordResetFail';\nimport { useQueryParams } from '../util/useQueryParams';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PasswordResetLandingPage = () => {\n  _s();\n\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isFailure, setIsFailure] = useState(false);\n  const [passwordValue, setPasswordValue] = useState('');\n  const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n  const [passwordResetCode, setPasswordResetCode] = useState('');\n  const {\n    email\n  } = useQueryParams();\n\n  const onResetClicked = async () => {\n    try {\n      await axios.put(`/api/users/${passwordResetCode}/reset-password`, {\n        email,\n        newPassword: passwordValue\n      });\n      setIsSuccess(true);\n    } catch (e) {\n      setIsFailure(true);\n    }\n  };\n\n  if (isFailure) return /*#__PURE__*/_jsxDEV(PasswordResetFail, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 27\n  }, this);\n  if (isSuccess) return /*#__PURE__*/_jsxDEV(PasswordResetSuccess, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: passwordResetCode,\n      onChange: e => setPasswordResetCode(e.target.value),\n      placeholder: \"Password Reset Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: passwordValue,\n      onChange: e => setPasswordValue(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmPasswordValue,\n      onChange: e => setConfirmPasswordValue(e.target.value),\n      placeholder: \"Confirm Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !passwordValue || !confirmPasswordValue || passwordValue !== confirmPasswordValue,\n      onClick: onResetClicked,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PasswordResetLandingPage, \"lN2lbE5ikltrXYhzDbg2YiAfQ8c=\", false, function () {\n  return [useQueryParams];\n});\n\n_c = PasswordResetLandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordResetLandingPage\");","map":{"version":3,"sources":["/Users/admin/Desktop/mern-artwalk-auth-aws-google/client/src/pages/PasswordResetLandingPage.js"],"names":["useState","axios","PasswordResetSuccess","PasswordResetFail","useQueryParams","PasswordResetLandingPage","isSuccess","setIsSuccess","isFailure","setIsFailure","passwordValue","setPasswordValue","confirmPasswordValue","setConfirmPasswordValue","passwordResetCode","setPasswordResetCode","email","onResetClicked","put","newPassword","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACc,iBAAD,EAAoBC,oBAApB,IAA4Cf,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAYZ,cAAc,EAAhC;;AAEA,QAAMa,cAAc,GAAG,YAAY;AAC/B,QAAI;AACA,YAAMhB,KAAK,CAACiB,GAAN,CAAW,cAAaJ,iBAAkB,iBAA1C,EAA4D;AAAEE,QAAAA,KAAF;AAASG,QAAAA,WAAW,EAAET;AAAtB,OAA5D,CAAN;AACAH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAHD,CAGE,OAAOa,CAAP,EAAU;AACRX,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,GAPD;;AASA,MAAID,SAAJ,EAAe,oBAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,MAAIF,SAAJ,EAAe,oBAAO,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEf,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AACI,MAAA,KAAK,EAAEQ,iBADX;AAEI,MAAA,QAAQ,EAAEM,CAAC,IAAIL,oBAAoB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAFvC;AAGI,MAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,KAAK,EAAEZ,aAFX;AAGI,MAAA,QAAQ,EAAEU,CAAC,IAAIT,gBAAgB,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAHnC;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YAPJ,eAYI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,KAAK,EAAEV,oBAFX;AAGI,MAAA,QAAQ,EAAEQ,CAAC,IAAIP,uBAAuB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAH1C;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YAZJ,eAiBI;AACI,MAAA,QAAQ,EAAE,CAACZ,aAAD,IAAkB,CAACE,oBAAnB,IAA2CF,aAAa,KAAKE,oBAD3E;AAEI,MAAA,OAAO,EAAEK,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA5CM;;GAAMZ,wB;UAMSD,c;;;KANTC,wB","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { PasswordResetSuccess } from './PasswordResetSuccess';\nimport { PasswordResetFail } from './PasswordResetFail';\nimport { useQueryParams } from '../util/useQueryParams';\n\nexport const PasswordResetLandingPage = () => {\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [isFailure, setIsFailure] = useState(false);\n    const [passwordValue, setPasswordValue] = useState('');\n    const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n    const [passwordResetCode, setPasswordResetCode] = useState('');\n    const { email } = useQueryParams();\n\n    const onResetClicked = async () => {\n        try {\n            await axios.put(`/api/users/${passwordResetCode}/reset-password`, { email, newPassword: passwordValue });\n            setIsSuccess(true);\n        } catch (e) {\n            setIsFailure(true);\n        }\n    }\n\n    if (isFailure) return <PasswordResetFail />\n    if (isSuccess) return <PasswordResetSuccess />\n\n    return (\n        <div className=\"content-container\">\n            <h3>Reset Password</h3>\n            <p>Please enter a new password</p>\n            <input\n                value={passwordResetCode}\n                onChange={e => setPasswordResetCode(e.target.value)}\n                placeholder=\"Password Reset Code\" />\n            <input\n                type='password'\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                placeholder=\"Password\" />\n            <input\n                type='password'\n                value={confirmPasswordValue}\n                onChange={e => setConfirmPasswordValue(e.target.value)}\n                placeholder=\"Confirm Password\" />\n            <button\n                disabled={!passwordValue || !confirmPasswordValue || passwordValue !== confirmPasswordValue}\n                onClick={onResetClicked}\n            >Reset Password</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}