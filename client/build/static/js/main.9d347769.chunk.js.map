{"version":3,"sources":["pages/EmailVerificationSuccess.js","pages/EmailVerificationFail.js","auth/useToken.js","util/useQueryParams.js","pages/EmailVerificationCodePage.js","pages/EmailVerificationLandingPage.js","pages/ForgotPasswordPage.js","pages/LogInPage.js","pages/SignUpPage.js","auth/useUser.js","pages/UserInfoPage.js","pages/PasswordResetSuccess.js","pages/PasswordResetFail.js","pages/PasswordResetLandingPage.js","pages/PleaseVerifyEmailPage.js","auth/PrivateRoute.js","content/ArtWalk_Logo final_ww.png","Component/Gallery.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["EmailVerificationSuccess","history","useHistory","className","onClick","push","EmailVerificationFail","useToken","useState","localStorage","getItem","token","setTokenInternal","newToken","setItem","fold","arr","reduce","acc","x","i","last","length","everythingElse","slice","pairs","pair","useQueryParams","location","useLocation","currentParamsObj","URLSearchParams","search","entries","EmailVerificationCodePage","isSuccess","setIsSuccess","isFailure","setIsFailure","verificationString","setVerificationString","email","setToken","onSubmitVerificationString","a","axios","put","response","data","placeholder","value","onChange","e","target","EmailVerificationLandingPage","isLoading","setIsLoading","useParams","useEffect","loadVerification","ForgotPasswordPage","errorMessage","setErrorMessage","success","setSuccess","emailValue","setEmailValue","onSubmitClicked","setTimeout","encodeURIComponent","message","disabled","LogInPage","passwordValue","setPasswordValue","googleOauthUrl","setGoogleOauthUrl","oauthToken","get","url","console","log","loadOauthUrl","onLogInClicked","post","password","type","window","href","SignUpPage","confirmPasswordValue","setConfirmPasswordValue","onSignUpClicked","useUser","getPayloadFromToken","encodedPayload","split","JSON","parse","atob","user","setUser","UserInfoPage","id","isVerified","info","name","setName","bilds","setBilds","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","saveChanges","headers","Authorization","removeItem","PasswordResetSuccess","PasswordResetFail","PasswordResetLandingPage","passwordResetCode","setPasswordResetCode","onResetClicked","newPassword","PleaseVerifyEmailPage","PrivateRoute","props","to","Gallery","src","companyLogo","width","alt","Routes","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d347769.chunk.js","sourcesContent":["import { useHistory } from 'react-router-dom';\n\nexport const EmailVerificationSuccess = () => {\n    const history = useHistory();\n\n    return (\n        <div className=\"content-container\">\n            <h3>Success!</h3>\n            <p>\n                Thanks for verifying your email, now you can use all the app's features.\n            </p>\n            <button onClick={() => history.push('/')}>Go to home page</button>\n        </div>\n    );\n}","import { useHistory } from 'react-router-dom';\n\nexport const EmailVerificationFail = () => {\n    const history = useHistory();\n\n    return (\n        <div className=\"content-container\">\n            <h3>Uh oh...</h3>\n            <p>\n                Something went wrong while trying to verify your email.\n            </p>\n            <button onClick={() => history.push('/signup')}>Back to Sign-up</button>\n        </div>\n    );\n}","import { useState } from 'react';\n\nexport const useToken = () => {\n    const [token, setTokenInternal] = useState(() => {\n        return localStorage.getItem('token');\n    });\n\n    const setToken = newToken => {\n        localStorage.setItem('token', newToken);\n        setTokenInternal(newToken);\n    }\n\n    return [token, setToken];\n}","/*\n    This is just a nice custom hook that we can\n    use to get all the query parameters from inside\n    our components. Don't worry about the details\n    unless you're curious :)\n*/\n\nimport { useLocation } from 'react-router-dom';\n\nconst pairs = arr => arr.reduce((acc, x, i) => {\n    if (i % 2 === 0) {\n        return [...acc, [x]];\n    } else {\n        const last = acc[acc.length - 1];\n        const everythingElse = acc.slice(0, acc.length - 1);\n        return [...everythingElse, [...last, x]];\n    }\n}, [])[0] || [];\n\nconst fold = arr => pairs(arr).reduce((acc, pair) => {\n    return {\n        ...acc,\n        [pair[0]]: pair[1],\n    }\n}, {});\n\nexport const useQueryParams = () => {\n    const location = useLocation();\n    const currentParamsObj = new URLSearchParams(location.search);\n    const params = fold([...currentParamsObj.entries()]);\n\n    return params;\n}","import { useState } from 'react';\nimport axios from 'axios';\nimport { EmailVerificationSuccess } from './EmailVerificationSuccess';\nimport { EmailVerificationFail } from './EmailVerificationFail';\nimport { useToken } from '../auth/useToken';\nimport { useQueryParams } from '../util/useQueryParams';\n\nexport const EmailVerificationCodePage = () => {\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [isFailure, setIsFailure] = useState(false);\n\n    const [verificationString, setVerificationString] = useState('');\n    const { email } = useQueryParams();\n    const [, setToken] = useToken();\n\n    const onSubmitVerificationString = async () => {\n        try {\n            const response = await axios.put('/api/verify-email', { email, verificationString });\n            const { token } = response.data;\n            setToken(token);\n            setIsSuccess(true);\n        } catch (e) {\n            setIsFailure(true);\n        }\n    }\n\n    if (isSuccess) return <EmailVerificationSuccess />;\n    if (isFailure) return <EmailVerificationFail />;\n\n    return (\n        <div className=\"content-container\">\n            <h3>Please Verify Your Email</h3>\n            <p>You should have received a verification code at the email address you provided. Please enter it here:</p>\n            <input\n                placeholder=\"e.g. 123456\"\n                value={verificationString}\n                onChange={e => setVerificationString(e.target.value)} />\n            <button onClick={onSubmitVerificationString}>Submit</button>\n        </div>\n    );\n}","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\nimport { EmailVerificationSuccess } from './EmailVerificationSuccess';\nimport { EmailVerificationFail } from './EmailVerificationFail';\n\nexport const EmailVerificationLandingPage = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [isSuccess, setIsSuccess] = useState(false);\n    const { verificationString } = useParams();\n    const [,setToken] = useToken();\n\n    useEffect(() => {\n        const loadVerification = async () => {\n            try {\n                const response = await axios.put('/api/verify-email', { verificationString });\n                const { token } = response.data;\n                setToken(token);\n                setIsSuccess(true);\n                setIsLoading(false);\n            } catch (e) { \n                setIsSuccess(false);\n                setIsLoading(false);\n            }\n        }\n\n        loadVerification();\n    }, [setToken, verificationString]);\n\n    if (isLoading) return <p>Loading...</p>;\n    if (!isSuccess) return <EmailVerificationFail />\n    return <EmailVerificationSuccess />\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nexport const ForgotPasswordPage = () => {\n    const [errorMessage, setErrorMessage] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [emailValue, setEmailValue] = useState('');\n    const history = useHistory();\n\n    const onSubmitClicked = async () => {\n        try {\n            await axios.put(`/api/forgot-password/${emailValue}`);\n            setSuccess(true);\n            setTimeout(() => {\n                history.push(`/reset-password?email=${encodeURIComponent(emailValue)}`);\n            }, 3000);\n        } catch (e) {\n            setErrorMessage(e.message);\n        }\n    }\n\n    return success ? (\n        <div className=\"content-container\">\n            <h3>Success</h3>\n            <p>Check your email for a reset link</p>\n        </div>\n    ) : (\n        <div className=\"content-container\">\n            <h3>Forgot your Password</h3>\n            <div>\n            <p>Enter your email for a reset link</p>\n            {errorMessage && <div className=\"fail\">{errorMessage}</div>}\n            <input\n                value={emailValue}\n                onChange={e => setEmailValue(e.target.value)}\n                placeholder=\"example@gmail.com\" />\n            <li><button disabled={!emailValue} onClick={onSubmitClicked}>Send Reset Link</button></li>\n            <li><button onClick={() => history.push('/login')}>Back to Log In</button></li>\n            </div>\n        </div>\n    );\n}","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\nimport { useQueryParams } from '../util/useQueryParams';\n\nexport const LogInPage = () => {\n    const [, setToken] = useToken();\n\n    //const [errorMessage, setErrorMessage] = useState('');    \n    const [errorMessage] = useState('');\n\n\n    const [emailValue, setEmailValue] = useState('');\n    const [passwordValue, setPasswordValue] = useState('');\n\n    const [googleOauthUrl, setGoogleOauthUrl] = useState('');\n    const { token: oauthToken } = useQueryParams();\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (oauthToken) {\n            setToken(oauthToken);\n            history.push('/');\n        }\n    }, [oauthToken, setToken, history]);\n\n    useEffect(() => {\n        const loadOauthUrl = async () => {\n            try {\n                const response = await axios.get('/auth/google/url');\n                const { url } = response.data;\n                setGoogleOauthUrl(url);\n            } catch (e) {\n                console.log(e);\n            }\n        }\n\n        loadOauthUrl();\n    }, []);\n\n    const onLogInClicked = async () => {\n        const response = await axios.post('/api/login', {\n            email: emailValue,\n            password: passwordValue,\n        });\n        const { token } = response.data;\n        setToken(token);\n        history.push('/');\n    }\n\n    return (\n        \n        <div className=\"content-container\">\n            <h3>Log In</h3>\n            <div>\n            {errorMessage && <div className=\"fail\">{errorMessage}</div>}\n            <input\n                value={emailValue}\n                onChange={e => setEmailValue(e.target.value)}\n                placeholder=\"example@gmail.com\" />\n            <input\n                type=\"password\"\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                placeholder=\"password\" />\n            <li><button\n                disabled={!emailValue || !passwordValue}\n                onClick={onLogInClicked}>Log In</button></li>\n            <hr />\n            <li><button onClick={() => history.push('/signup')}>Don't have an account? Sign Up</button></li>\n            <li><button\n                disabled={!googleOauthUrl}\n                onClick={() => { window.location.href = googleOauthUrl }}\n            >Log in with Google</button></li>\n            <li><button onClick={() => history.push('/forgot-password')}>Forgot your password?</button></li>\n            </div>\n        </div>\n    );\n}","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\n\nexport const SignUpPage = () => {\n    //const [token, setToken] = useToken();\n    const [ setToken] = useToken();\n\n    //const [errorMessage, setErrorMessage] = useState('');\n    const [errorMessage] = useState('');\n\n    const [emailValue, setEmailValue] = useState('');\n    const [passwordValue, setPasswordValue] = useState('');\n    const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n\n    const history = useHistory();\n\n    const onSignUpClicked = async () => {\n        const response = await axios.post('/api/signup', {\n            email: emailValue,\n            password: passwordValue,\n        });\n        const { token } = response.data;\n        setToken(token);\n        history.push(`/please-verify?email=${encodeURIComponent(emailValue)}`);\n    }\n\n    return (\n        <div className=\"content-container\">\n            <h3>Sign Up</h3>\n            <div>\n            {errorMessage && <div className=\"fail\">{errorMessage}</div>}\n            <input\n                value={emailValue}\n                onChange={e => setEmailValue(e.target.value)}\n                placeholder=\"example@gmail.com\" />\n            <input\n                type=\"password\"\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                placeholder=\"password\" />\n            <input\n                type=\"password\"\n                value={confirmPasswordValue}\n                onChange={e => setConfirmPasswordValue(e.target.value)}\n                placeholder=\"password\" />\n            <hr />\n            <li><button\n                disabled={\n                    !emailValue || !passwordValue ||\n                    passwordValue !== confirmPasswordValue\n                }\n                onClick={onSignUpClicked}>Sign Up</button></li>\n            <li><button onClick={() => history.push('/login')}>Already have an account? Log In</button></li>\n            </div>\n        </div>\n    );\n}","import { useState, useEffect } from 'react';\nimport { useToken } from './useToken';\n\nexport const useUser = () => {\n    const [token] = useToken();\n\n    const getPayloadFromToken = token => {\n        const encodedPayload = token.split('.')[1];\n        return JSON.parse(atob(encodedPayload));\n    }\n\n    const [user, setUser] = useState(() => {\n        if (!token) return null;\n        return getPayloadFromToken(token);\n    });\n\n    useEffect(() => {\n        if (!token) {\n            setUser(null);\n        } else {\n            setUser(getPayloadFromToken(token));\n        }\n    }, [token]);\n\n    return user;\n}","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\nimport { useUser } from '../auth/useUser';\n\nexport const UserInfoPage = () => {\n    const user = useUser();\n    const [token, setToken] = useToken();\n\n    const { id, email, isVerified, info } = user;\n\n    // We'll use the history to navigate the user\n    // programmatically later on (we're not using it yet)\n    const history = useHistory();\n\n    // These states are bound to the values of the text inputs\n    // on the page (see JSX below). \n    const [name, setName] = useState(info.name || '');\n    const [bilds, setBilds] = useState(info.bilds || '');\n\n    // These state variables control whether or not we show\n    // the success and error message sections after making\n    // a network request (see JSX below).\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    // This useEffect hook automatically hides the\n    // success and error messages after 3 seconds when they're shown.\n    // Just a little user interface improvement.\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n    const saveChanges = async () => {\n        try {\n            const response = await axios.put(`/api/users/${id}`, {\n                name,\n                bilds,\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            const { token: newToken } = response.data;\n            setToken(newToken);\n            setShowSuccessMessage(true);\n        } catch (error) {\n            setShowErrorMessage(true);\n        }\n    }\n\n    const logOut = () => {\n        localStorage.removeItem('token');\n        history.push('/login');\n    }\n    \n    const resetValues = () => {\n        setName(info.name);\n        setBilds(info.bilds);\n    }\n    \n    // And here we have the JSX for our component. It's pretty straightforward\n    return (\n        <div className=\"content-container\">\n            <h1> {email}</h1>\n            {!isVerified && <div className=\"fail\">You won't be able to make any changes until you verify your email</div>}\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\n            <h3>Create an ArtWalk</h3>\n            <label>\n                <p>ArtWalk title:</p>\n                <input\n                    onChange={e => setName(e.target.value)}\n                    value={name} />\n            </label>\n            <label>\n                <p>Bild:</p>\n                <input\n                    onChange={e => setBilds(e.target.value)}\n                    value={bilds} />\n            </label>\n                <div className=\"buttom\">\n            <li><button onClick={resetValues}>Reset Values</button></li>\n            <li><button onClick={saveChanges}>Save Changes</button></li>\n            <hr />\n            <li><button onClick={logOut}>Log Out</button></li>\n            </div>\n        </div>\n    );\n}\n","import { useHistory } from 'react-router-dom';\n\nexport const PasswordResetSuccess = () => {\n    const history = useHistory();\n\n    return (\n        <div className=\"content-container\">\n            <h3>Success!</h3>\n            <p>\n                Your password has been reset, now please login with your new password.\n            </p>\n            <button onClick={() => history.push('/login')}>Log in</button>\n        </div>\n    );\n}","import { useHistory } from 'react-router-dom';\n\nexport const PasswordResetFail = () => {\n    const history = useHistory();\n\n    return (\n        <div className=\"content-container\">\n            <h3>Uh oh...</h3>\n            <p>\n                Something went wrong while trying to reset your password.\n            </p>\n            <button onClick={() => history.push('/login')}>Back to Log in</button>\n        </div>\n    );\n}","import { useState } from 'react';\nimport axios from 'axios';\nimport { PasswordResetSuccess } from './PasswordResetSuccess';\nimport { PasswordResetFail } from './PasswordResetFail';\nimport { useQueryParams } from '../util/useQueryParams';\n\nexport const PasswordResetLandingPage = () => {\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [isFailure, setIsFailure] = useState(false);\n    const [passwordValue, setPasswordValue] = useState('');\n    const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n    const [passwordResetCode, setPasswordResetCode] = useState('');\n    const { email } = useQueryParams();\n\n    const onResetClicked = async () => {\n        try {\n            await axios.put(`/api/users/${passwordResetCode}/reset-password`, { email, newPassword: passwordValue });\n            setIsSuccess(true);\n        } catch (e) {\n            setIsFailure(true);\n        }\n    }\n\n    if (isFailure) return <PasswordResetFail />\n    if (isSuccess) return <PasswordResetSuccess />\n\n    return (\n        <div className=\"content-container\">\n            <h3>Reset Password</h3>\n            <p>Please enter a new password</p>\n            <input\n                value={passwordResetCode}\n                onChange={e => setPasswordResetCode(e.target.value)}\n                placeholder=\"Password Reset Code\" />\n            <input\n                type='password'\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                placeholder=\"Password\" />\n            <input\n                type='password'\n                value={confirmPasswordValue}\n                onChange={e => setConfirmPasswordValue(e.target.value)}\n                placeholder=\"Confirm Password\" />\n            <button\n                disabled={!passwordValue || !confirmPasswordValue || passwordValue !== confirmPasswordValue}\n                onClick={onResetClicked}\n            >Reset Password</button>\n        </div>\n    )\n}","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from '../util/useQueryParams';\n\nexport const PleaseVerifyEmailPage = () => {\n    const history = useHistory();\n    const { email } = useQueryParams();\n\n    useEffect(() => {\n        setTimeout(() => {\n            history.push(`/verify-email?email=${encodeURIComponent(email)}`);\n        }, 3000);\n    }, [history, email]);\n\n    return (\n        <div className=\"content-container\">\n            <h3>Thanks for Signing Up!</h3>\n            <p>\n                A verification email has been sent to the email address you provided.\n                Please verify your email to unlock full site features.\n            </p>\n        </div>\n    );\n}","import { Redirect, Route } from 'react-router-dom';\nimport { useUser } from './useUser';\n\nexport const PrivateRoute = props => {\n    const user = useUser();\n\n    if (!user) return <Redirect to=\"/login\" />\n\n    return <Route {...props} />\n}","export default __webpack_public_path__ + \"static/media/ArtWalk_Logo final_ww.317c96ce.png\";","import companyLogo from '../content/ArtWalk_Logo final_ww.png';\n\nfunction Gallery() {\n  return (\n    <div>\n      <img src={companyLogo} width=\"270\" alt=\"Artwalk Inc. logo\"/>\n    </div>\n  );\n}\nexport default Gallery","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { EmailVerificationCodePage } from './pages/EmailVerificationCodePage';\nimport { EmailVerificationLandingPage } from './pages/EmailVerificationLandingPage';\nimport { ForgotPasswordPage } from './pages/ForgotPasswordPage';\nimport { LogInPage } from './pages/LogInPage';\nimport { SignUpPage } from './pages/SignUpPage';\nimport { UserInfoPage } from './pages/UserInfoPage';\nimport { PasswordResetLandingPage } from './pages/PasswordResetLandingPage';\nimport { PleaseVerifyEmailPage } from './pages/PleaseVerifyEmailPage';\nimport { PrivateRoute } from './auth/PrivateRoute';\nimport Gallery from \"./Component/Gallery\";\n\nexport const Routes = () => {\n    return (\n        <Router>\n        <h2>Artwalk</h2>\n            <Switch>\n                <PrivateRoute path=\"/\" exact>\n                    <UserInfoPage />\n                </PrivateRoute>\n                <Route path=\"/verify-email\" exact>\n                    <EmailVerificationCodePage />\n                </Route>\n                <Route path=\"/verify-email/:verificationString\">\n                    <EmailVerificationLandingPage />\n                </Route>\n                <Route path=\"/forgot-password\">\n                    <ForgotPasswordPage />\n                </Route>\n                <Route path=\"/login\">\n                    <LogInPage />\n                </Route>\n                <Route path=\"/reset-password\">\n                    <PasswordResetLandingPage />\n                </Route>\n                <Route path=\"/please-verify\">\n                    <PleaseVerifyEmailPage />\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUpPage />\n                </Route>\n            </Switch>\n            <Gallery/>\n        </Router>\n    );\n}","import { Routes } from './Routes';\n\nexport const App = () => {\n    return (\n        <div className=\"page-container\">\n            <Routes />\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}